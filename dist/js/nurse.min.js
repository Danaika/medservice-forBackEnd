"use strict";function ownKeys(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),n.push.apply(n,r)}return n}function _objectSpread(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?ownKeys(Object(n),!0).forEach(function(e){_defineProperty(t,e,n[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):ownKeys(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))})}return t}function _defineProperty(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var tableWrapper=document.querySelector(".table_wrapper");if(tableWrapper){var oldScrollTop=0,oldScrollLeft=0,instance=OverlayScrollbars(tableWrapper,{scrollbars:{autoHide:"leave",autoHideDelay:500}}),$table=$("#nurse_table");$table.floatThead({zIndex:10,scrollContainer:function(e){return e.closest(".table_container")}}),$("table").floatThead("reflow")}!function(){var e=document.getElementById("calendar_input"),a=["Января","Февраля","Марта","Апреля","Мая","Июня","Июля","Августа","Сентября","Октября","Ноября","Декабря"];if(e){var n=datepicker("#calendar_input",{onSelect:function(){},onShow:function(){setTimeout(function(){e.scrollIntoView(!0)},0)},formatter:function(e,t){new Date;var n=t.getDate(),r=t.getMonth(),o=t.getFullYear();console.log("month_list[mm]="+a[r]),console.log("mm = "+r),e.value=n+" "+a[r]+" "+o},startDay:1,customDays:["Вс","Пн","Вт","Ср","Чт","Пт","Сб"],customMonths:["Январь","Февраль","Март","Апрель","Май","Июнь","Июль","Август","Сентябрь","Октябрь","Ноябрь","Декабрь"],customOverlayMonths:["Янв","Фев","Март","Апр","Май","Июнь","Июль","Авг","Сен","Окт","Нояб","Дек"],showAllDates:!0,overlayButton:"Готово",overlayPlaceholder:"Введите год"});document.getElementById("calendar_btn").addEventListener("click",function(e){e.stopPropagation();var t=n.calendarContainer.classList.contains("qs-hidden");n[t?"show":"hide"]()});var t=document.querySelectorAll(".schedule__month .btn-arrow--dark"),r=document.querySelector(".schedule__month .btn-lr__name .btn-lr-m"),o=["Январь","Февраль","Март","Апрель","Май","Июнь","Июль","Август","Сентябрь","Октябрь","Ноябрь","Декабрь"],c=(new Date).getMonth();r.innerHTML=o[c],t.forEach(function(t){t.addEventListener("click",function(e){c=t.classList.contains("left")?0===c?11:c-1:11===c?0:c+1,r.innerHTML=o[c]})})}}(),function(){var e=navigator.userAgent.toLowerCase(),t=-1<e.indexOf("iphone")||-1<e.indexOf("ipad"),n=-1<e.indexOf("safari")&&-1===e.indexOf("win")&&(-1===e.indexOf("mobile")||t),r=window.innerHeight,o=window.innerWidth,a=document.querySelector(".container"),c=i(a,"padding-top"),l=i(a,"padding-bottom");function i(e,t){return getComputedStyle(e)[t]}n&&1023<o&&o<1347&&(a.style.height="".concat(r-parseInt(c)-parseInt(l),"px")),n||(document.body.style.height="100vh");var s=document.querySelector(".table_wrapper");if(s){var d=document.querySelector(".table_container"),u=document.querySelector(".content-title"),p=document.querySelector(".content-block"),m=document.querySelector(".header-block"),f=document.querySelector(".nurse-main"),y=document.querySelector(".nurse-page"),b=u.clientHeight,v=i(u,"margin-bottom"),g=i(p,"padding-top"),h=i(p,"padding-bottom"),w=m.clientHeight,S=i(m,"margin-bottom"),L=i(f,"padding-top"),O=i(f,"padding-bottom"),_=i(y,"padding-top"),I=i(y,"padding-bottom"),q=parseInt(r)-parseInt(_)-parseInt(I)-parseInt(L)-parseInt(O)-parseInt(S)-parseInt(w)-parseInt(h)-parseInt(g)-parseInt(v)-parseInt(b);n&&(q+=parseInt(S),1023<o&&o<1347||(q=q-parseInt(c)-parseInt(l)+parseInt(S))),s.style.height="".concat(q,"px"),d.style.height="".concat(q,"px"),s.style.maxHeight="".concat(q,"px")}}(),function(){var e=document.getElementById("modal-template");if(e){var a=e.innerHTML,c=document.getElementById("researchTable").innerHTML,l=document.getElementById("medicinesTable").innerHTML;document.querySelectorAll(".nurse-main .btn--table").forEach(function(o){o.addEventListener("click",function(e){var t=c,n="#research_table";o.classList.contains("btn--purple")&&(t=l,n="#medicines_table"),window.scrollTo(0,0);var r=function(e){var t=document.createElement("div");t.className="popup",t.innerHTML=a;var n=t.querySelector(".overlay");return n.classList.add("dialog--flex-display"),t.querySelector(".popup__container").innerHTML=e,n.addEventListener("click",function(e){e.target===n&&document.body.removeChild(t)}),{container:t,open:function(){document.body.appendChild(t)},close:function(){document.body.removeChild(t)}}}(t);r.open(),function(e,t){if(e){OverlayScrollbars(e,{scrollbars:{autoHide:"leave",autoHideDelay:500}});$(t).floatThead({scrollContainer:function(e){return console.log(e),e.closest(".table-responsive")}}),$("table").floatThead("reflow")}}(r.container.querySelector(".table_wrapper"),n)})})}}(),function(){if(document.querySelector(".datetime")){var e=new CalendarClock(".datetime");setInterval(function(){return e.update()},1e3)}function r(e){if(e.classList.contains("active"))e.classList.remove("active");else{var t=e.parentNode.querySelector(".active");t&&t.classList.remove("active"),e.classList.add("active")}}if(document.querySelectorAll(".layer").forEach(function(n){n.addEventListener("click",function(e){var t=e.target.parentNode;(t.classList.contains("layer__top")||t.classList.contains("layer"))&&r(n)})}),document.querySelectorAll(".schedule-list__item").forEach(function(t){t.addEventListener("click",function(e){console.log(e.target.parentNode);e.target.parentNode;r(t)})}),0!==document.querySelectorAll(".scrolled").length)OverlayScrollbars(document.querySelectorAll(".scrolled"),{scrollbars:{autoHide:"scroll",autoHideDelay:1e3}})}(),function(){var e=document.querySelector("#popup-template");if(e){e.innerHTML;window.addEventListener("DOMContentLoaded",function(e){setTimeout(function(){},500)})}}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
